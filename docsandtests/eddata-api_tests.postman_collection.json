{
	"variables": [],
	"info": {
		"name": "eddata-api_tests",
		"_postman_id": "bbff9a77-2e93-519b-1280-66c32f8162ba",
		"description": "Tests for each endpoint to verify that the api is working as intended.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "buildings_endpoint",
			"description": "Tests to ensure the buildings endpoint is functioning correctly.",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setGlobalVariable(\"authorization\", \"Bearer \" + data.user.token);\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":  \"admin\",\n\t\"password\":  \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Building Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"buildingCode is correct\"] = data.building.buildingCode === 123;\ntests[\"acronym is correct\"] = data.building.acronym === \"string\";\ntests[\"latitude is correct\"] = data.building.latitude === 867.5309;\ntests[\"longitude is correct\"] = data.building.longitude === 123.4567;\ntests[\"name is correct\"] = data.building.name === \"string\";\ntests[\"street is correct\"] = data.building.street === \"string\";\ntests[\"city is correct\"] = data.building.city === \"string\";\ntests[\"zip is correct\"] = data.building.zip === \"string\";\ntests[\"level is correct\"] = data.building.level === \"string\";\ntests[\"floors is correct\"] = data.building.floors === 2;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n\npostman.setEnvironmentVariable(\"building_id\", data.building.id);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/buildings",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"building\": {\n    \t\"buildingCode\": 123,\n    \t\"acronym\": \"string\",\n    \t\"latitude\": 867.5309,\n    \t\"longitude\": 123.4567,\n    \t\"name\": \"string\",\n    \t\"street\": \"string\",\n    \t\"city\": \"string\",\n    \t\"zip\": \"string\",\n    \t\"level\": \"string\",\n    \t\"floors\": 2\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Building By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"buildingCode is correct\"] = data.building.buildingCode === 123;\ntests[\"acronym is correct\"] = data.building.acronym === \"string\";\ntests[\"latitude is correct\"] = data.building.latitude === 867.5309;\ntests[\"longitude is correct\"] = data.building.longitude === 123.4567;\ntests[\"name is correct\"] = data.building.name === \"string\";\ntests[\"street is correct\"] = data.building.street === \"string\";\ntests[\"city is correct\"] = data.building.city === \"string\";\ntests[\"zip is correct\"] = data.building.zip === \"string\";\ntests[\"level is correct\"] = data.building.level === \"string\";\ntests[\"floors is correct\"] = data.building.floors === 2;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n\npostman.setGlobalVariable(\"building_meta_href\", data.meta.href);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/buildings/{{building_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Building By Meta Href",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"buildingCode is correct\"] = data.building.buildingCode === 123;\ntests[\"acronym is correct\"] = data.building.acronym === \"string\";\ntests[\"latitude is correct\"] = data.building.latitude === 867.5309;\ntests[\"longitude is correct\"] = data.building.longitude === 123.4567;\ntests[\"name is correct\"] = data.building.name === \"string\";\ntests[\"street is correct\"] = data.building.street === \"string\";\ntests[\"city is correct\"] = data.building.city === \"string\";\ntests[\"zip is correct\"] = data.building.zip === \"string\";\ntests[\"level is correct\"] = data.building.level === \"string\";\ntests[\"floors is correct\"] = data.building.floors === 2;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "{{building_meta_href}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Building Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"buildingCode is correct\"] = data.building.buildingCode === 1231;\ntests[\"acronym is correct\"] = data.building.acronym === \"string1\";\ntests[\"latitude is correct\"] = data.building.latitude === 867.53091;\ntests[\"longitude is correct\"] = data.building.longitude === 123.45671;\ntests[\"name is correct\"] = data.building.name === \"string1\";\ntests[\"street is correct\"] = data.building.street === \"string1\";\ntests[\"city is correct\"] = data.building.city === \"string1\";\ntests[\"zip is correct\"] = data.building.zip === \"string1\";\ntests[\"level is correct\"] = data.building.level === \"string1\";\ntests[\"floors is correct\"] = data.building.floors === 21;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/buildings/{{building_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"building\": {\n    \t\"buildingCode\": 1231,\n    \t\"acronym\": \"string1\",\n    \t\"latitude\": 867.53091,\n    \t\"longitude\": 123.45671,\n    \t\"name\": \"string1\",\n    \t\"street\": \"string1\",\n    \t\"city\": \"string1\",\n    \t\"zip\": \"string1\",\n    \t\"level\": \"string1\",\n    \t\"floors\": 21\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Building By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"buildingCode is correct\"] = data.building.buildingCode === 1231;\ntests[\"acronym is correct\"] = data.building.acronym === \"string1\";\ntests[\"latitude is correct\"] = data.building.latitude === 867.53091;\ntests[\"longitude is correct\"] = data.building.longitude === 123.45671;\ntests[\"name is correct\"] = data.building.name === \"string1\";\ntests[\"street is correct\"] = data.building.street === \"string1\";\ntests[\"city is correct\"] = data.building.city === \"string1\";\ntests[\"zip is correct\"] = data.building.zip === \"string1\";\ntests[\"level is correct\"] = data.building.level === \"string1\";\ntests[\"floors is correct\"] = data.building.floors === 21;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/buildings/{{building_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Building By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/buildings/{{building_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Deleted Building By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Building was not found\"] = data.error === \"buildingNotFound\";\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/buildings/{{building_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "computers_endpoint",
			"description": "",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"authorization\", \"Bearer \" + data.user.token);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Computer Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Computer barcode correct\"] = data.computer.barcode === 'string';\ntests[\"Computer deviceModel correct\"] = data.computer.deviceModel === 'string';\ntests[\"Computer hardDrive correct\"] = data.computer.hardDrive === 'string';\ntests[\"Computer lastInventory correct\"] = data.computer.lastInventory === '2015-06-23T00:00:00.000Z';\ntests[\"Computer location correct\"] = data.computer.location === 'string';\ntests[\"Computer manufacturer correct\"] = data.computer.manufacturer === 'string';\ntests[\"Computer name correct\"] = data.computer.name === 'string';\ntests[\"Computer notes correct\"] = data.computer.notes === \"string\";\ntests[\"Computer processor correct\"] = data.computer.processor === \"string\";\ntests[\"Computer purchaseDate correct\"] = data.computer.purchaseDate === '2015-06-23T00:00:00.000Z';\ntests[\"Computer ram correct\"] = data.computer.ram === 4048;\ntests[\"Computer room correct\"] = data.computer.room === 'string';\ntests[\"Computer serialNumber correct\"] = data.computer.serialNumber === 'string';\ntests[\"Computer vendor correct\"] = data.computer.vendor === 'string';\ntests[\"Computer warrantyExpiration correct\"] = data.computer.warrantyExpiration === '2015-06-23T00:00:00.000Z';\ntests[\"Computer lastIpAddress correct\"] = data.computer.lastIpAddress === 'string';\ntests[\"Computer currentUser correct\"] = data.computer.currentUser === 'string';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"computer_id\", data.computer.id);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/computers",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"computer\": {\n      \"barcode\": \"string\",\n      \"deviceModel\": \"string\",\n      \"groups\": [\n        \"string\"\n      ],\n      \"hardDrive\": \"string\",\n      \"lastInventory\": \"2015-06-23\",\n      \"location\": \"string\",\n      \"manufacturer\": \"string\",\n      \"name\": \"string\",\n      \"notes\": \"string\",\n      \"processor\": \"string\",\n      \"purchaseDate\": \"2015-06-23\",\n      \"ram\": 4048,\n      \"room\": \"string\",\n      \"serialNumber\": \"string\",\n      \"vendor\": \"string\",\n      \"warrantyExpiration\": \"2015-06-23\",\n      \"lastIpAddress\": \"string\",\n      \"currentUser\": \"string\",\n      \"previousUsers\": [\n        \"string\"\n      ]\n    }\n}"
						},
						"description": "Create computer record"
					},
					"response": []
				},
				{
					"name": "Find Computer By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Computer barcode correct\"] = data.computer.barcode === 'string';\ntests[\"Computer deviceModel correct\"] = data.computer.deviceModel === 'string';\ntests[\"Computer hardDrive correct\"] = data.computer.hardDrive === 'string';\ntests[\"Computer lastInventory correct\"] = data.computer.lastInventory === '2015-06-23T00:00:00.000Z';\ntests[\"Computer location correct\"] = data.computer.location === 'string';\ntests[\"Computer manufacturer correct\"] = data.computer.manufacturer === 'string';\ntests[\"Computer name correct\"] = data.computer.name === 'string';\ntests[\"Computer notes correct\"] = data.computer.notes === \"string\";\ntests[\"Computer processor correct\"] = data.computer.processor === \"string\";\ntests[\"Computer purchaseDate correct\"] = data.computer.purchaseDate === '2015-06-23T00:00:00.000Z';\ntests[\"Computer ram correct\"] = data.computer.ram === 4048;\ntests[\"Computer room correct\"] = data.computer.room === 'string';\ntests[\"Computer serialNumber correct\"] = data.computer.serialNumber === 'string';\ntests[\"Computer vendor correct\"] = data.computer.vendor === 'string';\ntests[\"Computer warrantyExpiration correct\"] = data.computer.warrantyExpiration === '2015-06-23T00:00:00.000Z';\ntests[\"Computer lastIpAddress correct\"] = data.computer.lastIpAddress === 'string';\ntests[\"Computer currentUser correct\"] = data.computer.currentUser === 'string';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/computers/{{computer_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Computer Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Computer barcode correct\"] = data.computer.barcode === 'string1';\ntests[\"Computer deviceModel correct\"] = data.computer.deviceModel === 'string1';\ntests[\"Computer hardDrive correct\"] = data.computer.hardDrive === 'string1';\ntests[\"Computer lastInventory correct\"] = data.computer.lastInventory === '2015-06-24T00:00:00.000Z';\ntests[\"Computer location correct\"] = data.computer.location === 'string1';\ntests[\"Computer manufacturer correct\"] = data.computer.manufacturer === 'string1';\ntests[\"Computer name correct\"] = data.computer.name === 'string1';\ntests[\"Computer notes correct\"] = data.computer.notes === \"string1\";\ntests[\"Computer processor correct\"] = data.computer.processor === \"string1\";\ntests[\"Computer purchaseDate correct\"] = data.computer.purchaseDate === '2015-06-24T00:00:00.000Z';\ntests[\"Computer ram correct\"] = data.computer.ram === 4049;\ntests[\"Computer room correct\"] = data.computer.room === 'string1';\ntests[\"Computer serialNumber correct\"] = data.computer.serialNumber === 'string1';\ntests[\"Computer vendor correct\"] = data.computer.vendor === 'string1';\ntests[\"Computer warrantyExpiration correct\"] = data.computer.warrantyExpiration === '2015-06-24T00:00:00.000Z';\ntests[\"Computer lastIpAddress correct\"] = data.computer.lastIpAddress === 'string1';\ntests[\"Computer currentUser correct\"] = data.computer.currentUser === 'string1';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/computers/{{computer_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"computer\": {\n      \"barcode\": \"string1\",\n      \"deviceModel\": \"string1\",\n      \"groups\": [\n        \"string1\"\n      ],\n      \"hardDrive\": \"string1\",\n      \"lastInventory\": \"2015-06-24\",\n      \"location\": \"string1\",\n      \"manufacturer\": \"string1\",\n      \"name\": \"string1\",\n      \"notes\": \"string1\",\n      \"processor\": \"string1\",\n      \"purchaseDate\": \"2015-06-24\",\n      \"ram\": 4049,\n      \"room\": \"string1\",\n      \"serialNumber\": \"string1\",\n      \"vendor\": \"string1\",\n      \"warrantyExpiration\": \"2015-06-24\",\n      \"lastIpAddress\": \"string1\",\n      \"currentUser\": \"string1\",\n      \"previousUsers\": [\n        \"string1\"\n      ]\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Computer By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Computer barcode correct\"] = data.computer.barcode === 'string1';\ntests[\"Computer deviceModel correct\"] = data.computer.deviceModel === 'string1';\ntests[\"Computer hardDrive correct\"] = data.computer.hardDrive === 'string1';\ntests[\"Computer lastInventory correct\"] = data.computer.lastInventory === '2015-06-24T00:00:00.000Z';\ntests[\"Computer location correct\"] = data.computer.location === 'string1';\ntests[\"Computer manufacturer correct\"] = data.computer.manufacturer === 'string1';\ntests[\"Computer name correct\"] = data.computer.name === 'string1';\ntests[\"Computer notes correct\"] = data.computer.notes === \"string1\";\ntests[\"Computer processor correct\"] = data.computer.processor === \"string1\";\ntests[\"Computer purchaseDate correct\"] = data.computer.purchaseDate === '2015-06-24T00:00:00.000Z';\ntests[\"Computer ram correct\"] = data.computer.ram === 4049;\ntests[\"Computer room correct\"] = data.computer.room === 'string1';\ntests[\"Computer serialNumber correct\"] = data.computer.serialNumber === 'string1';\ntests[\"Computer vendor correct\"] = data.computer.vendor === 'string1';\ntests[\"Computer warrantyExpiration correct\"] = data.computer.warrantyExpiration === '2015-06-24T00:00:00.000Z';\ntests[\"Computer lastIpAddress correct\"] = data.computer.lastIpAddress === 'string1';\ntests[\"Computer currentUser correct\"] = data.computer.currentUser === 'string1';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/computers/{{computer_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Computer By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/sections/{{section_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "employees_endpoint",
			"description": "",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"authorization\", \"Bearer \" + data.user.token);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Employee Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Employee nameId correct\"] = data.employee.nameId === 0;\ntests[\"Employee nalphakey correct\"] = data.employee.nalphakey === 'string';\ntests[\"Employee username correct\"] = data.employee.username === 'string';\ntests[\"Employee startDate correct\"] = data.employee.startDate === '2015-04-09T00:00:00.000Z';\ntests[\"Employee building correct\"] = data.employee.building === 'string';\ntests[\"Employee buildingStateCode correct\"] = data.employee.buildingStateCode === 'string';\ntests[\"Employee buildingName correct\"] = data.employee.buildingName === \"string\";\ntests[\"Employee firstName correct\"] = data.employee.firstName === 'string';\ntests[\"Employee middleName correct\"] = data.employee.middleName === 'string';\ntests[\"Employee lastName correct\"] = data.employee.lastName === 'string';\ntests[\"Employee psdSSN correct\"] = data.employee.psdSSN === 'string';\ntests[\"Employee phone1 correct\"] = data.employee.phone1 === 'string';\ntests[\"Employee phone2 correct\"] = data.employee.phone2 === 'string';\ntests[\"Employee phone3 correct\"] = data.employee.phone3 === 'string';\ntests[\"Employee birthdate correct\"] = data.employee.birthdate === '2015-04-09T00:00:00.000Z';\ntests[\"Employee gender correct\"] = data.employee.gender === 'string';\ntests[\"Employee raceCode correct\"] = data.employee.raceCode === 'string';\ntests[\"Employee streetDir correct\"] = data.employee.streetDir === 'string';\ntests[\"Employee streetNumber correct\"] = data.employee.streetNumber === 'string';\ntests[\"Employee streetName correct\"] = data.employee.streetName === 'string';\ntests[\"Employee streetApartment correct\"] = data.employee.streetApartment === 'string';\ntests[\"Employee poBox correct\"] = data.employee.poBox === 'string';\ntests[\"Employee zipCode correct\"] = data.employee.zipCode === 'string';\ntests[\"Employee state correct\"] = data.employee.state === 'string';\ntests[\"Employee workDays correct\"] = data.employee.workDays === 0;\ntests[\"Employee certNumber correct\"] = data.employee.certNumber === 'string';\ntests[\"Employee title correct\"] = data.employee.title === 'string';\ntests[\"Employee refreshAccount correct\"] = data.employee.refreshAccount === true;\ntests[\"Employee pictureUrl correct\"] = data.employee.pictureUrl === 'string';\ntests[\"Employee badgeNumber correct\"] = data.employee.badgeNumber === 931;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"employee_id\", data.employee.id);\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/employees",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"employee\": {\n    \"nameId\": \"0\",\n    \"nalphakey\": \"string\",\n    \"username\": \"string\",\n    \"startDate\": \"2015-04-09\",\n    \"building\": \"string\",\n    \"buildingStateCode\": \"string\",\n    \"buildingName\": \"string\",\n    \"firstName\": \"string\",\n    \"middleName\": \"string\",\n    \"lastName\": \"string\",\n    \"psdSSN\": \"string\",\n    \"phone1\": \"string\",\n    \"phone2\": \"string\",\n    \"phone3\": \"string\",\n    \"birthdate\": \"2015-04-09\",\n    \"gender\": \"string\",\n    \"raceCode\": \"string\",\n    \"streetDir\": \"string\",\n    \"streetNumber\": \"string\",\n    \"streetName\": \"string\",\n    \"streetApartment\": \"string\",\n    \"poBox\": \"string\",\n    \"zipCode\": \"string\",\n    \"state\": \"string\",\n    \"workDays\": \"0\",\n    \"certNumber\": \"string\",\n    \"title\": \"string\",\n    \"refreshAccount\": true,\n    \"badgeNumber\": \"931\",\n    \"pictureUrl\": \"string\"\n  }\n}"
						},
						"description": "Create api user"
					},
					"response": []
				},
				{
					"name": "Find Employee By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Employee nameId correct\"] = data.employee.nameId === 0;\ntests[\"Employee nalphakey correct\"] = data.employee.nalphakey === 'string';\ntests[\"Employee username correct\"] = data.employee.username === 'string';\ntests[\"Employee startDate correct\"] = data.employee.startDate === '2015-04-09T00:00:00.000Z';\ntests[\"Employee building correct\"] = data.employee.building === 'string';\ntests[\"Employee buildingStateCode correct\"] = data.employee.buildingStateCode === 'string';\ntests[\"Employee buildingName correct\"] = data.employee.buildingName === \"string\";\ntests[\"Employee firstName correct\"] = data.employee.firstName === 'string';\ntests[\"Employee middleName correct\"] = data.employee.middleName === 'string';\ntests[\"Employee lastName correct\"] = data.employee.lastName === 'string';\ntests[\"Employee psdSSN correct\"] = data.employee.psdSSN === 'string';\ntests[\"Employee phone1 correct\"] = data.employee.phone1 === 'string';\ntests[\"Employee phone2 correct\"] = data.employee.phone2 === 'string';\ntests[\"Employee phone3 correct\"] = data.employee.phone3 === 'string';\ntests[\"Employee birthdate correct\"] = data.employee.birthdate === '2015-04-09T00:00:00.000Z';\ntests[\"Employee gender correct\"] = data.employee.gender === 'string';\ntests[\"Employee raceCode correct\"] = data.employee.raceCode === 'string';\ntests[\"Employee streetDir correct\"] = data.employee.streetDir === 'string';\ntests[\"Employee streetNumber correct\"] = data.employee.streetNumber === 'string';\ntests[\"Employee streetName correct\"] = data.employee.streetName === 'string';\ntests[\"Employee streetApartment correct\"] = data.employee.streetApartment === 'string';\ntests[\"Employee poBox correct\"] = data.employee.poBox === 'string';\ntests[\"Employee zipCode correct\"] = data.employee.zipCode === 'string';\ntests[\"Employee state correct\"] = data.employee.state === 'string';\ntests[\"Employee workDays correct\"] = data.employee.workDays === 0;\ntests[\"Employee certNumber correct\"] = data.employee.certNumber === 'string';\ntests[\"Employee title correct\"] = data.employee.title === 'string';\ntests[\"Employee pictureUrl correct\"] = data.employee.pictureUrl === 'string';\ntests[\"Employee badgeNumber correct\"] = data.employee.badgeNumber === 931;\ntests[\"Employee refreshAccount correct\"] = data.employee.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/employees/{{employee_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Employee Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Employee nameId correct\"] = data.employee.nameId === 0;\ntests[\"Employee nalphakey correct\"] = data.employee.nalphakey === 'string1';\ntests[\"Employee username correct\"] = data.employee.username === 'string1';\ntests[\"Employee startDate correct\"] = data.employee.startDate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee building correct\"] = data.employee.building === 'string1';\ntests[\"Employee buildingStateCode correct\"] = data.employee.buildingStateCode === 'string1';\ntests[\"Employee buildingName correct\"] = data.employee.buildingName === \"string1\";\ntests[\"Employee firstName correct\"] = data.employee.firstName === 'string1';\ntests[\"Employee middleName correct\"] = data.employee.middleName === 'string1';\ntests[\"Employee lastName correct\"] = data.employee.lastName === 'string1';\ntests[\"Employee psdSSN correct\"] = data.employee.psdSSN === 'string1';\ntests[\"Employee phone1 correct\"] = data.employee.phone1 === 'string1';\ntests[\"Employee phone2 correct\"] = data.employee.phone2 === 'string1';\ntests[\"Employee phone3 correct\"] = data.employee.phone3 === 'string1';\ntests[\"Employee birthdate correct\"] = data.employee.birthdate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee gender correct\"] = data.employee.gender === 'string1';\ntests[\"Employee raceCode correct\"] = data.employee.raceCode === 'string1';\ntests[\"Employee streetDir correct\"] = data.employee.streetDir === 'string1';\ntests[\"Employee streetNumber correct\"] = data.employee.streetNumber === 'string1';\ntests[\"Employee streetName correct\"] = data.employee.streetName === 'string1';\ntests[\"Employee streetApartment correct\"] = data.employee.streetApartment === 'string1';\ntests[\"Employee poBox correct\"] = data.employee.poBox === 'string1';\ntests[\"Employee zipCode correct\"] = data.employee.zipCode === 'string1';\ntests[\"Employee state correct\"] = data.employee.state === 'string1';\ntests[\"Employee workDays correct\"] = data.employee.workDays === 1;\ntests[\"Employee certNumber correct\"] = data.employee.certNumber === 'string1';\ntests[\"Employee title correct\"] = data.employee.title === 'string1';\ntests[\"Employee pictureUrl correct\"] = data.employee.pictureUrl === 'string1';\ntests[\"Employee badgeNumber correct\"] = data.employee.badgeNumber === 932;\ntests[\"Employee refreshAccount correct\"] = data.employee.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/employees",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"employee\": {\n    \"nameId\": \"0\",\n    \"nalphakey\": \"string1\",\n    \"username\": \"string1\",\n    \"startDate\": \"2015-04-08\",\n    \"building\": \"string1\",\n    \"buildingStateCode\": \"string1\",\n    \"buildingName\": \"string1\",\n    \"firstName\": \"string1\",\n    \"middleName\": \"string1\",\n    \"lastName\": \"string1\",\n    \"psdSSN\": \"string1\",\n    \"phone1\": \"string1\",\n    \"phone2\": \"string1\",\n    \"phone3\": \"string1\",\n    \"birthdate\": \"2015-04-08\",\n    \"gender\": \"string1\",\n    \"raceCode\": \"string1\",\n    \"streetDir\": \"string1\",\n    \"streetNumber\": \"string1\",\n    \"streetName\": \"string1\",\n    \"streetApartment\": \"string1\",\n    \"poBox\": \"string1\",\n    \"zipCode\": \"string1\",\n    \"state\": \"string1\",\n    \"workDays\": \"1\",\n    \"certNumber\": \"string1\",\n    \"title\": \"string1\",\n    \"badgeNumber\": \"932\",\n    \"pictureUrl\": \"string1\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Employee By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Employee nameId correct\"] = data.employee.nameId === 1;\ntests[\"Employee nalphakey correct\"] = data.employee.nalphakey === 'string1';\ntests[\"Employee username correct\"] = data.employee.username === 'string1';\ntests[\"Employee startDate correct\"] = data.employee.startDate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee building correct\"] = data.employee.building === 'string1';\ntests[\"Employee buildingStateCode correct\"] = data.employee.buildingStateCode === 'string1';\ntests[\"Employee buildingName correct\"] = data.employee.buildingName === \"string1\";\ntests[\"Employee firstName correct\"] = data.employee.firstName === 'string1';\ntests[\"Employee middleName correct\"] = data.employee.middleName === 'string1';\ntests[\"Employee lastName correct\"] = data.employee.lastName === 'string1';\ntests[\"Employee psdSSN correct\"] = data.employee.psdSSN === 'string1';\ntests[\"Employee phone1 correct\"] = data.employee.phone1 === 'string1';\ntests[\"Employee phone2 correct\"] = data.employee.phone2 === 'string1';\ntests[\"Employee phone3 correct\"] = data.employee.phone3 === 'string1';\ntests[\"Employee birthdate correct\"] = data.employee.birthdate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee gender correct\"] = data.employee.gender === 'string1';\ntests[\"Employee raceCode correct\"] = data.employee.raceCode === 'string1';\ntests[\"Employee streetDir correct\"] = data.employee.streetDir === 'string1';\ntests[\"Employee streetNumber correct\"] = data.employee.streetNumber === 'string1';\ntests[\"Employee streetName correct\"] = data.employee.streetName === 'string1';\ntests[\"Employee streetApartment correct\"] = data.employee.streetApartment === 'string1';\ntests[\"Employee poBox correct\"] = data.employee.poBox === 'string1';\ntests[\"Employee zipCode correct\"] = data.employee.zipCode === 'string1';\ntests[\"Employee state correct\"] = data.employee.state === 'string1';\ntests[\"Employee workDays correct\"] = data.employee.workDays === 1;\ntests[\"Employee certNumber correct\"] = data.employee.certNumber === 'string1';\ntests[\"Employee title correct\"] = data.employee.title === 'string1';\ntests[\"Employee refreshAccount correct\"] = data.employee.refreshAccount === false;\ntests[\"Employee badgeNumber correct\"] = data.employee.badgeNumber === 932;\ntests[\"Employee pictureUrl correct\"] = data.employee.pictureUrl === 'string1';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/employees/{{employee_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Change Employee Badge ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Employee nameId correct\"] = data.employee.nameId === 1;\ntests[\"Employee nalphakey correct\"] = data.employee.nalphakey === 'string1';\ntests[\"Employee username correct\"] = data.employee.username === 'string1';\ntests[\"Employee startDate correct\"] = data.employee.startDate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee building correct\"] = data.employee.building === 'string1';\ntests[\"Employee buildingStateCode correct\"] = data.employee.buildingStateCode === 'string1';\ntests[\"Employee buildingName correct\"] = data.employee.buildingName === \"string1\";\ntests[\"Employee firstName correct\"] = data.employee.firstName === 'string1';\ntests[\"Employee middleName correct\"] = data.employee.middleName === 'string1';\ntests[\"Employee lastName correct\"] = data.employee.lastName === 'string1';\ntests[\"Employee psdSSN correct\"] = data.employee.psdSSN === 'string1';\ntests[\"Employee phone1 correct\"] = data.employee.phone1 === 'string1';\ntests[\"Employee phone2 correct\"] = data.employee.phone2 === 'string1';\ntests[\"Employee phone3 correct\"] = data.employee.phone3 === 'string1';\ntests[\"Employee birthdate correct\"] = data.employee.birthdate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee gender correct\"] = data.employee.gender === 'string1';\ntests[\"Employee raceCode correct\"] = data.employee.raceCode === 'string1';\ntests[\"Employee streetDir correct\"] = data.employee.streetDir === 'string1';\ntests[\"Employee streetNumber correct\"] = data.employee.streetNumber === 'string1';\ntests[\"Employee streetName correct\"] = data.employee.streetName === 'string1';\ntests[\"Employee streetApartment correct\"] = data.employee.streetApartment === 'string1';\ntests[\"Employee poBox correct\"] = data.employee.poBox === 'string1';\ntests[\"Employee zipCode correct\"] = data.employee.zipCode === 'string1';\ntests[\"Employee state correct\"] = data.employee.state === 'string1';\ntests[\"Employee workDays correct\"] = data.employee.workDays === 1;\ntests[\"Employee certNumber correct\"] = data.employee.certNumber === 'string1';\ntests[\"Employee title correct\"] = data.employee.title === 'string1';\ntests[\"Employee pictureUrl correct\"] = data.employee.pictureUrl === 'string1';\ntests[\"Employee badgeNumber correct\"] = data.employee.badgeNumber === 945;\ntests[\"Employee refreshAccount correct\"] = data.employee.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/employees",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"employee\": {\n    \"nameId\": \"0\",\n    \"nalphakey\": \"string1\",\n    \"username\": \"string1\",\n    \"startDate\": \"2015-04-08\",\n    \"building\": \"string1\",\n    \"buildingStateCode\": \"string1\",\n    \"buildingName\": \"string1\",\n    \"firstName\": \"string1\",\n    \"middleName\": \"string1\",\n    \"lastName\": \"string1\",\n    \"psdSSN\": \"string1\",\n    \"phone1\": \"string1\",\n    \"phone2\": \"string1\",\n    \"phone3\": \"string1\",\n    \"birthdate\": \"2015-04-08\",\n    \"gender\": \"string1\",\n    \"raceCode\": \"string1\",\n    \"streetDir\": \"string1\",\n    \"streetNumber\": \"string1\",\n    \"streetName\": \"string1\",\n    \"streetApartment\": \"string1\",\n    \"poBox\": \"string1\",\n    \"zipCode\": \"string1\",\n    \"state\": \"string1\",\n    \"workDays\": \"1\",\n    \"certNumber\": \"string1\",\n    \"title\": \"string1\",\n    \"badgeNumber\": \"945\",\n    \"pictureUrl\": \"string1\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Check Refresh Status of Badge ID Change",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Employee nameId correct\"] = data.employee.nameId === 1;\ntests[\"Employee nalphakey correct\"] = data.employee.nalphakey === 'string1';\ntests[\"Employee username correct\"] = data.employee.username === 'string1';\ntests[\"Employee startDate correct\"] = data.employee.startDate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee building correct\"] = data.employee.building === 'string1';\ntests[\"Employee buildingStateCode correct\"] = data.employee.buildingStateCode === 'string1';\ntests[\"Employee buildingName correct\"] = data.employee.buildingName === \"string1\";\ntests[\"Employee firstName correct\"] = data.employee.firstName === 'string1';\ntests[\"Employee middleName correct\"] = data.employee.middleName === 'string1';\ntests[\"Employee lastName correct\"] = data.employee.lastName === 'string1';\ntests[\"Employee psdSSN correct\"] = data.employee.psdSSN === 'string1';\ntests[\"Employee phone1 correct\"] = data.employee.phone1 === 'string1';\ntests[\"Employee phone2 correct\"] = data.employee.phone2 === 'string1';\ntests[\"Employee phone3 correct\"] = data.employee.phone3 === 'string1';\ntests[\"Employee birthdate correct\"] = data.employee.birthdate === '2015-04-08T00:00:00.000Z';\ntests[\"Employee gender correct\"] = data.employee.gender === 'string1';\ntests[\"Employee raceCode correct\"] = data.employee.raceCode === 'string1';\ntests[\"Employee streetDir correct\"] = data.employee.streetDir === 'string1';\ntests[\"Employee streetNumber correct\"] = data.employee.streetNumber === 'string1';\ntests[\"Employee streetName correct\"] = data.employee.streetName === 'string1';\ntests[\"Employee streetApartment correct\"] = data.employee.streetApartment === 'string1';\ntests[\"Employee poBox correct\"] = data.employee.poBox === 'string1';\ntests[\"Employee zipCode correct\"] = data.employee.zipCode === 'string1';\ntests[\"Employee state correct\"] = data.employee.state === 'string1';\ntests[\"Employee workDays correct\"] = data.employee.workDays === 1;\ntests[\"Employee certNumber correct\"] = data.employee.certNumber === 'string1';\ntests[\"Employee title correct\"] = data.employee.title === 'string1';\ntests[\"Employee refreshAccount correct\"] = data.employee.refreshAccount === true;\ntests[\"Employee badgeNumber correct\"] = data.employee.badgeNumber === 945;\ntests[\"Employee pictureUrl correct\"] = data.employee.pictureUrl === 'string1';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/employees/{{employee_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Employee By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/employees/{{employee_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "enrollments_endpoint",
			"description": "",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"authorization\", \"Bearer \" + data.user.token);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Enrollment Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Enrollment psId correct\"] = data.enrollment.psId === 0;\ntests[\"Enrollment studentNumber correct\"] = data.enrollment.studentNumber === 'string';\ntests[\"Enrollment sectionId correct\"] = data.enrollment.sectionId === 0;\ntests[\"Enrollment refreshAccount correct\"] = data.enrollment.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"enrollment_id\", data.enrollment.id);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/enrollments",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enrollment\": {\n    \"psId\": 0,\n    \"studentNumber\": \"string\",\n    \"sectionId\": 0,\n    \"refreshAccount\": true\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Enrollment By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Enrollment psId correct\"] = data.enrollment.psId === 0;\ntests[\"Enrollment studentNumber correct\"] = data.enrollment.studentNumber === 'string';\ntests[\"Enrollment sectionId correct\"] = data.enrollment.sectionId === 0;\ntests[\"Enrollment refreshAccount correct\"] = data.enrollment.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/enrollments/{{enrollment_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Enrollment Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Enrollment psId correct\"] = data.enrollment.psId === 1;\ntests[\"Enrollment studentNumber correct\"] = data.enrollment.studentNumber === 'string1';\ntests[\"Enrollment sectionId correct\"] = data.enrollment.sectionId === 1;\ntests[\"Enrollment refreshAccount correct\"] = data.enrollment.refreshAccount === false;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/enrollments/{{enrollment_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enrollment\": {\n    \"psId\": 1,\n    \"studentNumber\": \"string1\",\n    \"sectionId\": 1,\n    \"refreshAccount\": false\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Enrollment By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Enrollment psId correct\"] = data.enrollment.psId === 1;\ntests[\"Enrollment studentNumber correct\"] = data.enrollment.studentNumber === 'string1';\ntests[\"Enrollment sectionId correct\"] = data.enrollment.sectionId === 1;\ntests[\"Enrollment refreshAccount correct\"] = data.enrollment.refreshAccount === false;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/enrollments/{{enrollment_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Enrollment By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/enrollments/{{enrollment_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "phones_endpoint",
			"description": "Tests to ensure the phones endpoint is functioning correctly.",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setGlobalVariable(\"authorization\", \"Bearer \" + data.user.token);\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":  \"admin\",\n\t\"password\":  \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Phone Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n    \t\ntests[\"building is correct\"] = data.phone.building === 1;\ntests[\"displayName is correct\"] = data.phone.displayName === \"string\";\ntests[\"extension is correct\"] = data.phone.extension === 1234;\ntests[\"macAddress is correct\"] = data.phone.macAddress === \"a1b2c3d4e5f6\";\ntests[\"room is correct\"] = data.phone.room === 1;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"phone_id\", data.phone.id);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/phones",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": {\n    \t\"building\": 1,\n    \t\"displayName\": \"string\",\n    \t\"extension\": 1234,\n    \t\"macAddress\": \"a1b2c3d4e5f6\",\n    \t\"room\": 1\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Phone By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n    \t\ntests[\"building is correct\"] = data.phone.building === 1;\ntests[\"displayName is correct\"] = data.phone.displayName === \"string\";\ntests[\"extension is correct\"] = data.phone.extension === 1234;\ntests[\"macAddress is correct\"] = data.phone.macAddress === \"a1b2c3d4e5f6\";\ntests[\"room is correct\"] = data.phone.room === 1;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setGlobalVariable(\"phone_meta_href\", data.meta.href);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/phones/{{phone_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Phone By Meta Href",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n    \t\ntests[\"building is correct\"] = data.phone.building === 1;\ntests[\"displayName is correct\"] = data.phone.displayName === \"string\";\ntests[\"extension is correct\"] = data.phone.extension === 1234;\ntests[\"macAddress is correct\"] = data.phone.macAddress === \"a1b2c3d4e5f6\";\ntests[\"room is correct\"] = data.phone.room === 1;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "{{phone_meta_href}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Phone Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n    \t\ntests[\"building is correct\"] = data.phone.building === 11;\ntests[\"displayName is correct\"] = data.phone.displayName === \"string1\";\ntests[\"extension is correct\"] = data.phone.extension === 12341;\ntests[\"macAddress is correct\"] = data.phone.macAddress === \"a1b2c3d4e5f61\";\ntests[\"room is correct\"] = data.phone.room === 11;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setGlobalVariable(\"phone_id\", data.phone.id);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/phones/{{phone_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": {\n    \t\"building\": 11,\n    \t\"displayName\": \"string1\",\n    \t\"extension\": 12341,\n    \t\"macAddress\": \"a1b2c3d4e5f61\",\n    \t\"room\": 11\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Phone By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n    \t\ntests[\"building is correct\"] = data.phone.building === 11;\ntests[\"displayName is correct\"] = data.phone.displayName === \"string1\";\ntests[\"extension is correct\"] = data.phone.extension === 12341;\ntests[\"macAddress is correct\"] = data.phone.macAddress === \"a1b2c3d4e5f61\";\ntests[\"room is correct\"] = data.phone.room === 11;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/phones/{{phone_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Phone By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/phones/{{phone_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Deleted Phone By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Phone was not found\"] = data.error === \"phoneNotFound\";\ntests[\"Status code is 404\"] = responseCode.code === 404;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/phones/{{phone_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "rooms_endpoint",
			"description": "Tests to ensure the rooms endpoint is functioning correctly.",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setGlobalVariable(\"authorization\", \"Bearer \" + data.user.token);\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\":  \"admin\",\n\t\"password\":  \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Room Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"building is correct\"] = data.room.building === 1;\ntests[\"name is correct\"] = data.room.name === \"string\";\ntests[\"floor is correct\"] = data.room.floor === 1;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"room_id\", data.room.id);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/rooms",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"room\": {\n    \t\"building\": 1,\n    \t\"name\": \"string\",\n    \t\"floor\": 1\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Room By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"building is correct\"] = data.room.building === 1;\ntests[\"name is correct\"] = data.room.name === \"string\";\ntests[\"floor is correct\"] = data.room.floor === 1;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setGlobalVariable(\"room_meta_href\", data.meta.href);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/rooms/{{room_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Room By Meta Href",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"building is correct\"] = data.room.building === 1;\ntests[\"name is correct\"] = data.room.name === \"string\";\ntests[\"floor is correct\"] = data.room.floor === 1;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "{{room_meta_href}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Room Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"building is correct\"] = data.room.building === 11;\ntests[\"name is correct\"] = data.room.name === \"string1\";\ntests[\"floor is correct\"] = data.room.floor === 11;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/rooms/{{room_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"room\": {\n    \t\"building\": 11,\n    \t\"name\": \"string1\",\n    \t\"floor\": 11\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Room By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"building is correct\"] = data.room.building === 11;\ntests[\"name is correct\"] = data.room.name === \"string1\";\ntests[\"floor is correct\"] = data.room.floor === 11;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/rooms/{{room_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Room By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/rooms/{{room_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Deleted Room By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Room was not found\"] = data.error === \"roomNotFound\";\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/rooms/{{room_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "sections_endpoint",
			"description": "",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"authorization\", \"Bearer \" + data.user.token);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Section Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Section psId correct\"] = data.section.psId === 0;\ntests[\"Section buildingStateCode correct\"] = data.section.buildingStateCode === 'string';\ntests[\"Section courseName correct\"] = data.section.courseName === 'string';\ntests[\"Section sectionNumber correct\"] = data.section.sectionNumber === 'string';\ntests[\"Section expression correct\"] = data.section.expression === 'string';\ntests[\"Section courseNumber correct\"] = data.section.courseNumber === 'string';\ntests[\"Section term correct\"] = data.section.term === \"string\";\ntests[\"Section studentCount correct\"] = data.section.studentCount === 0;\ntests[\"Section room correct\"] = data.section.room === 'string';\ntests[\"Section maxEnrollment correct\"] = data.section.maxEnrollment === 0;\ntests[\"Section courseCode correct\"] = data.section.courseCode === 'string';\ntests[\"Section firstDay correct\"] = data.section.firstDay === '2015-04-09T00:00:00.000Z';\ntests[\"Section lastDay correct\"] = data.section.lastDay === '2015-04-09T00:00:00.000Z';\ntests[\"Section refreshAccount correct\"] = data.section.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"section_id\", data.section.id);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/sections",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"section\": {\n    \"psId\": 0,\n    \"buildingStateCode\": \"string\",\n    \"courseName\": \"string\",\n    \"sectionNumber\": \"string\",\n    \"expression\": \"string\",\n    \"courseNumber\": \"string\",\n    \"term\": \"string\",\n    \"studentCount\": 0,\n    \"room\": \"string\",\n    \"maxEnrollment\": 0,\n    \"courseCode\": \"string\",\n    \"teachers\": [\n      0\n    ],\n    \"firstDay\": \"2015-04-09\",\n    \"lastDay\": \"2015-04-09\",\n    \"refreshAccount\": true\n  }\n}"
						},
						"description": "Create api user"
					},
					"response": []
				},
				{
					"name": "Find Section By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Section psId correct\"] = data.section.psId === 0;\ntests[\"Section buildingStateCode correct\"] = data.section.buildingStateCode === 'string';\ntests[\"Section courseName correct\"] = data.section.courseName === 'string';\ntests[\"Section sectionNumber correct\"] = data.section.sectionNumber === 'string';\ntests[\"Section expression correct\"] = data.section.expression === 'string';\ntests[\"Section courseNumber correct\"] = data.section.courseNumber === 'string';\ntests[\"Section term correct\"] = data.section.term === \"string\";\ntests[\"Section studentCount correct\"] = data.section.studentCount === 0;\ntests[\"Section room correct\"] = data.section.room === 'string';\ntests[\"Section maxEnrollment correct\"] = data.section.maxEnrollment === 0;\ntests[\"Section courseCode correct\"] = data.section.courseCode === 'string';\ntests[\"Section firstDay correct\"] = data.section.firstDay === '2015-04-09T00:00:00.000Z';\ntests[\"Section lastDay correct\"] = data.section.lastDay === '2015-04-09T00:00:00.000Z';\ntests[\"Section refreshAccount correct\"] = data.section.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/sections/{{section_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Section Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Section psId correct\"] = data.section.psId === 1;\ntests[\"Section buildingStateCode correct\"] = data.section.buildingStateCode === 'string1';\ntests[\"Section courseName correct\"] = data.section.courseName === 'string1';\ntests[\"Section sectionNumber correct\"] = data.section.sectionNumber === 'string1';\ntests[\"Section expression correct\"] = data.section.expression === 'string1';\ntests[\"Section courseNumber correct\"] = data.section.courseNumber === 'string1';\ntests[\"Section term correct\"] = data.section.term === \"string1\";\ntests[\"Section studentCount correct\"] = data.section.studentCount === 1;\ntests[\"Section room correct\"] = data.section.room === 'string1';\ntests[\"Section maxEnrollment correct\"] = data.section.maxEnrollment === 1;\ntests[\"Section courseCode correct\"] = data.section.courseCode === 'string1';\ntests[\"Section firstDay correct\"] = data.section.firstDay === '2015-04-08T00:00:00.000Z';\ntests[\"Section lastDay correct\"] = data.section.lastDay === '2015-04-08T00:00:00.000Z';\ntests[\"Section refreshAccount correct\"] = data.section.refreshAccount === false;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/sections/{{section_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"section\": {\n    \"psId\": 1,\n    \"buildingStateCode\": \"string1\",\n    \"courseName\": \"string1\",\n    \"sectionNumber\": \"string1\",\n    \"expression\": \"string1\",\n    \"courseNumber\": \"string1\",\n    \"term\": \"string1\",\n    \"studentCount\": 1,\n    \"room\": \"string1\",\n    \"maxEnrollment\": 1,\n    \"courseCode\": \"string1\",\n    \"teachers\": [\n      1\n    ],\n    \"firstDay\": \"2015-04-08\",\n    \"lastDay\": \"2015-04-08\",\n    \"refreshAccount\": false\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Section By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Section psId correct\"] = data.section.psId === 1;\ntests[\"Section buildingStateCode correct\"] = data.section.buildingStateCode === 'string1';\ntests[\"Section courseName correct\"] = data.section.courseName === 'string1';\ntests[\"Section sectionNumber correct\"] = data.section.sectionNumber === 'string1';\ntests[\"Section expression correct\"] = data.section.expression === 'string1';\ntests[\"Section courseNumber correct\"] = data.section.courseNumber === 'string1';\ntests[\"Section term correct\"] = data.section.term === \"string1\";\ntests[\"Section studentCount correct\"] = data.section.studentCount === 1;\ntests[\"Section room correct\"] = data.section.room === 'string1';\ntests[\"Section maxEnrollment correct\"] = data.section.maxEnrollment === 1;\ntests[\"Section courseCode correct\"] = data.section.courseCode === 'string1';\ntests[\"Section firstDay correct\"] = data.section.firstDay === '2015-04-08T00:00:00.000Z';\ntests[\"Section lastDay correct\"] = data.section.lastDay === '2015-04-08T00:00:00.000Z';\ntests[\"Section refreshAccount correct\"] = data.section.refreshAccount === false;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/sections/{{section_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Section By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/sections/{{section_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "students_endpoint",
			"description": "",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"authorization\", \"Bearer \" + data.user.token);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Student Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Student nameId correct\"] = data.student.nameId === 0;\ntests[\"Student firstName correct\"] = data.student.firstName === 'string';\ntests[\"Student lastName correct\"] = data.student.lastName === 'string';\ntests[\"Student middleName correct\"] = data.student.middleName === 'string';\ntests[\"Student studentNumber correct\"] = data.student.studentNumber === 'string';\ntests[\"Student enrollStatus correct\"] = data.student.enrollStatus === 'string';\ntests[\"Student gradeLevel correct\"] = data.student.gradeLevel === '0';\ntests[\"Student gender correct\"] = data.student.gender === 'string';\ntests[\"Student birthdate correct\"] = data.student.birthdate === '2015-04-09T00:00:00.000Z';\ntests[\"Student street correct\"] = data.student.street === 'string';\ntests[\"Student city correct\"] = data.student.city === 'string';\ntests[\"Student state correct\"] = data.student.state === 'string';\ntests[\"Student zip correct\"] = data.student.zip === 'string';\ntests[\"Student guardianEmail correct\"] = data.student.guardianEmail === 'string';\ntests[\"Student homePhone correct\"] = data.student.homePhone === 'string';\ntests[\"Student stateStudentNumber correct\"] = data.student.stateStudentNumber === 'string';\ntests[\"Student buildingStateCode correct\"] = data.student.buildingStateCode === 'string';\ntests[\"Student buildingName correct\"] = data.student.buildingName === 'string';\ntests[\"Student username correct\"] = data.student.username === 'string';\ntests[\"Student email correct\"] = data.student.email === 'string';\ntests[\"Student ethnicity correct\"] = data.student.ethnicity === 'string';\ntests[\"Student primaryLanguage correct\"] = data.student.primaryLanguage === 'string';\ntests[\"Student mother correct\"] = data.student.mother === 'string';\ntests[\"Student motherHome correct\"] = data.student.motherHome === 'string';\ntests[\"Student father correct\"] = data.student.father === 'string';\ntests[\"Student fatherHome correct\"] = data.student.fatherHome === 'string';\ntests[\"Student ec1 correct\"] = data.student.ec1 === 'string';\ntests[\"Student ec1Relation correct\"] = data.student.ec1Relation === 'string';\ntests[\"Student ec1Phone correct\"] = data.student.ec1Phone === 'string';\ntests[\"Student ec2 correct\"] = data.student.ec2 === 'string';\ntests[\"Student ec2Relation correct\"] = data.student.ec2Relation === 'string';\ntests[\"Student ec2Phone correct\"] = data.student.ec2Phone === 'string';\ntests[\"Student pictureUrl correct\"] = data.student.pictureUrl === 'string';\ntests[\"Student refreshAccount correct\"] = data.student.refreshAccount === true;\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"student_id\", data.student.id);\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/students",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"student\": {\n    \"nameId\": \"0\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"middleName\": \"string\",\n    \"studentNumber\": \"string\",\n    \"enrollStatus\": \"string\",\n    \"gradeLevel\": \"0\",\n    \"gender\": \"string\",\n    \"birthdate\": \"2015-04-09\",\n    \"street\": \"string\",\n    \"city\": \"string\",\n    \"state\": \"string\",\n    \"zip\": \"string\",\n    \"guardianEmail\": \"string\",\n    \"homePhone\": \"string\",\n    \"stateStudentNumber\": \"string\",\n    \"buildingStateCode\": \"string\",\n    \"buildingName\": \"string\",\n    \"username\": \"string\",\n    \"email\": \"string\",\n    \"ethnicity\": \"string\",\n    \"primaryLanguage\": \"string\",\n    \"mother\": \"string\",\n    \"motherHome\": \"string\",\n    \"father\": \"string\",\n    \"fatherHome\": \"string\",\n    \"ec1\": \"string\",\n    \"ec1Relation\": \"string\",\n    \"ec1Phone\": \"string\",\n    \"ec2\": \"string\",\n    \"ec2Relation\": \"string\",\n    \"ec2Phone\": \"string\",\n    \"refreshAccount\": true,\n    \"pictureUrl\": \"string\"\n  }\n}"
						},
						"description": "Create api user"
					},
					"response": []
				},
				{
					"name": "Find Student By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Student nameId correct\"] = data.student.nameId === 0;\ntests[\"Student firstName correct\"] = data.student.firstName === 'string';\ntests[\"Student lastName correct\"] = data.student.lastName === 'string';\ntests[\"Student middleName correct\"] = data.student.middleName === 'string';\ntests[\"Student studentNumber correct\"] = data.student.studentNumber === 'string';\ntests[\"Student enrollStatus correct\"] = data.student.enrollStatus === 'string';\ntests[\"Student gradeLevel correct\"] = data.student.gradeLevel === '0';\ntests[\"Student gender correct\"] = data.student.gender === 'string';\ntests[\"Student birthdate correct\"] = data.student.birthdate === '2015-04-09T00:00:00.000Z';\ntests[\"Student street correct\"] = data.student.street === 'string';\ntests[\"Student city correct\"] = data.student.city === 'string';\ntests[\"Student state correct\"] = data.student.state === 'string';\ntests[\"Student zip correct\"] = data.student.zip === 'string';\ntests[\"Student guardianEmail correct\"] = data.student.guardianEmail === 'string';\ntests[\"Student homePhone correct\"] = data.student.homePhone === 'string';\ntests[\"Student stateStudentNumber correct\"] = data.student.stateStudentNumber === 'string';\ntests[\"Student buildingStateCode correct\"] = data.student.buildingStateCode === 'string';\ntests[\"Student buildingName correct\"] = data.student.buildingName === 'string';\ntests[\"Student username correct\"] = data.student.username === 'string';\ntests[\"Student email correct\"] = data.student.email === 'string';\ntests[\"Student ethnicity correct\"] = data.student.ethnicity === 'string';\ntests[\"Student primaryLanguage correct\"] = data.student.primaryLanguage === 'string';\ntests[\"Student mother correct\"] = data.student.mother === 'string';\ntests[\"Student motherHome correct\"] = data.student.motherHome === 'string';\ntests[\"Student father correct\"] = data.student.father === 'string';\ntests[\"Student fatherHome correct\"] = data.student.fatherHome === 'string';\ntests[\"Student ec1 correct\"] = data.student.ec1 === 'string';\ntests[\"Student ec1Relation correct\"] = data.student.ec1Relation === 'string';\ntests[\"Student ec1Phone correct\"] = data.student.ec1Phone === 'string';\ntests[\"Student ec2 correct\"] = data.student.ec2 === 'string';\ntests[\"Student ec2Relation correct\"] = data.student.ec2Relation === 'string';\ntests[\"Student ec2Phone correct\"] = data.student.ec2Phone === 'string';\ntests[\"Student refreshAccount correct\"] = data.student.refreshAccount === true;\ntests[\"Student pictureUrl correct\"] = data.student.pictureUrl === 'string';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/students/{{student_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Student Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Student nameId correct\"] = data.student.nameId === 1;\ntests[\"Student firstName correct\"] = data.student.firstName === 'string1';\ntests[\"Student lastName correct\"] = data.student.lastName === 'string1';\ntests[\"Student middleName correct\"] = data.student.middleName === 'string1';\ntests[\"Student studentNumber correct\"] = data.student.studentNumber === 'string1';\ntests[\"Student enrollStatus correct\"] = data.student.enrollStatus === 'string1';\ntests[\"Student gradeLevel correct\"] = data.student.gradeLevel === '1';\ntests[\"Student gender correct\"] = data.student.gender === 'string1';\ntests[\"Student birthdate correct\"] = data.student.birthdate === '2015-04-08T00:00:00.000Z';\ntests[\"Student street correct\"] = data.student.street === 'string1';\ntests[\"Student city correct\"] = data.student.city === 'string1';\ntests[\"Student state correct\"] = data.student.state === 'string1';\ntests[\"Student zip correct\"] = data.student.zip === 'string1';\ntests[\"Student guardianEmail correct\"] = data.student.guardianEmail === 'string1';\ntests[\"Student homePhone correct\"] = data.student.homePhone === 'string1';\ntests[\"Student stateStudentNumber correct\"] = data.student.stateStudentNumber === 'string1';\ntests[\"Student buildingStateCode correct\"] = data.student.buildingStateCode === 'string1';\ntests[\"Student buildingName correct\"] = data.student.buildingName === 'string1';\ntests[\"Student username correct\"] = data.student.username === 'string1';\ntests[\"Student email correct\"] = data.student.email === 'string1';\ntests[\"Student ethnicity correct\"] = data.student.ethnicity === 'string1';\ntests[\"Student primaryLanguage correct\"] = data.student.primaryLanguage === 'string1';\ntests[\"Student mother correct\"] = data.student.mother === 'string1';\ntests[\"Student motherHome correct\"] = data.student.motherHome === 'string1';\ntests[\"Student father correct\"] = data.student.father === 'string1';\ntests[\"Student fatherHome correct\"] = data.student.fatherHome === 'string1';\ntests[\"Student ec1 correct\"] = data.student.ec1 === 'string1';\ntests[\"Student ec1Relation correct\"] = data.student.ec1Relation === 'string1';\ntests[\"Student ec1Phone correct\"] = data.student.ec1Phone === 'string1';\ntests[\"Student ec2 correct\"] = data.student.ec2 === 'string1';\ntests[\"Student ec2Relation correct\"] = data.student.ec2Relation === 'string1';\ntests[\"Student ec2Phone correct\"] = data.student.ec2Phone === 'string1';\ntests[\"Student refreshAccount correct\"] = data.student.refreshAccount === false;\ntests[\"Student pictureUrl correct\"] = data.student.pictureUrl === 'string1';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"student_id\", data.student.id);\n"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/students/{{student_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"student\": {\n    \"nameId\": \"1\",\n    \"firstName\": \"string1\",\n    \"lastName\": \"string1\",\n    \"middleName\": \"string1\",\n    \"studentNumber\": \"string1\",\n    \"enrollStatus\": \"string1\",\n    \"gradeLevel\": \"1\",\n    \"gender\": \"string1\",\n    \"birthdate\": \"2015-04-08\",\n    \"street\": \"string1\",\n    \"city\": \"string1\",\n    \"state\": \"string1\",\n    \"zip\": \"string1\",\n    \"guardianEmail\": \"string1\",\n    \"homePhone\": \"string1\",\n    \"stateStudentNumber\": \"string1\",\n    \"buildingStateCode\": \"string1\",\n    \"buildingName\": \"string1\",\n    \"username\": \"string1\",\n    \"email\": \"string1\",\n    \"ethnicity\": \"string1\",\n    \"primaryLanguage\": \"string1\",\n    \"mother\": \"string1\",\n    \"motherHome\": \"string1\",\n    \"father\": \"string1\",\n    \"fatherHome\": \"string1\",\n    \"ec1\": \"string1\",\n    \"ec1Relation\": \"string1\",\n    \"ec1Phone\": \"string1\",\n    \"ec2\": \"string1\",\n    \"ec2Relation\": \"string1\",\n    \"ec2Phone\": \"string1\",\n    \"refreshAccount\": false,\n    \"pictureUrl\": \"string1\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find Updated Student By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Student nameId correct\"] = data.student.nameId === 1;\ntests[\"Student firstName correct\"] = data.student.firstName === 'string1';\ntests[\"Student lastName correct\"] = data.student.lastName === 'string1';\ntests[\"Student middleName correct\"] = data.student.middleName === 'string1';\ntests[\"Student studentNumber correct\"] = data.student.studentNumber === 'string1';\ntests[\"Student enrollStatus correct\"] = data.student.enrollStatus === 'string1';\ntests[\"Student gradeLevel correct\"] = data.student.gradeLevel === '1';\ntests[\"Student gender correct\"] = data.student.gender === 'string1';\ntests[\"Student birthdate correct\"] = data.student.birthdate === '2015-04-08T00:00:00.000Z';\ntests[\"Student street correct\"] = data.student.street === 'string1';\ntests[\"Student city correct\"] = data.student.city === 'string1';\ntests[\"Student state correct\"] = data.student.state === 'string1';\ntests[\"Student zip correct\"] = data.student.zip === 'string1';\ntests[\"Student guardianEmail correct\"] = data.student.guardianEmail === 'string1';\ntests[\"Student homePhone correct\"] = data.student.homePhone === 'string1';\ntests[\"Student stateStudentNumber correct\"] = data.student.stateStudentNumber === 'string1';\ntests[\"Student buildingStateCode correct\"] = data.student.buildingStateCode === 'string1';\ntests[\"Student buildingName correct\"] = data.student.buildingName === 'string1';\ntests[\"Student username correct\"] = data.student.username === 'string1';\ntests[\"Student email correct\"] = data.student.email === 'string1';\ntests[\"Student ethnicity correct\"] = data.student.ethnicity === 'string1';\ntests[\"Student primaryLanguage correct\"] = data.student.primaryLanguage === 'string1';\ntests[\"Student mother correct\"] = data.student.mother === 'string1';\ntests[\"Student motherHome correct\"] = data.student.motherHome === 'string1';\ntests[\"Student father correct\"] = data.student.father === 'string1';\ntests[\"Student fatherHome correct\"] = data.student.fatherHome === 'string1';\ntests[\"Student ec1 correct\"] = data.student.ec1 === 'string1';\ntests[\"Student ec1Relation correct\"] = data.student.ec1Relation === 'string1';\ntests[\"Student ec1Phone correct\"] = data.student.ec1Phone === 'string1';\ntests[\"Student ec2 correct\"] = data.student.ec2 === 'string1';\ntests[\"Student ec2Relation correct\"] = data.student.ec2Relation === 'string1';\ntests[\"Student ec2Phone correct\"] = data.student.ec2Phone === 'string1';\ntests[\"Student refreshAccount correct\"] = data.student.refreshAccount === false;\ntests[\"Student pictureUrl correct\"] = data.student.pictureUrl === 'string1';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/students/{{student_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Student By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/students/{{student_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "users_endpoint",
			"description": "All operations dealing with users of the api.",
			"item": [
				{
					"name": "Authenticate User For Access Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"authorization\", \"Bearer \" + data.user.token);"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"description": "Submit username & password to return a bearer token to be used for all other api calls."
					},
					"response": []
				},
				{
					"name": "Create User Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"User name correct\"] = data.user.name === 'John Doe';\ntests[\"User phone correct\"] = data.user.phone === '509.555.1212';\ntests[\"User email correct\"] = data.user.email === 'jdoe@school.edu';\ntests[\"User username correct\"] = data.user.username === 'jdoe';\ntests[\"User user_type correct\"] = data.user.user_type === 'Administrator';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setEnvironmentVariable(\"user_id\", data.user.id);\npostman.setEnvironmentVariable(\"user_username\", \"jdoe\");\npostman.setEnvironmentVariable(\"user_password\", \"password\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"name\": \"John Doe\",\n    \"email\": \"jdoe@school.edu\",\n    \"phone\": \"509.555.1212\",\n    \"username\": \"jdoe\",\n    \"password\": \"password\",\n    \"user_type\": \"Administrator\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"User name correct\"] = data.user.name === 'John Doe';\ntests[\"User phone correct\"] = data.user.phone === '509.555.1212';\ntests[\"User email correct\"] = data.user.email === 'jdoe@school.edu';\ntests[\"User username correct\"] = data.user.username === 'jdoe';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_username}}\",\n    \"password\": \"{{user_password}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find User By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"User name correct\"] = data.user.name === 'John Doe';\ntests[\"User phone correct\"] = data.user.phone === '509.555.1212';\ntests[\"User email correct\"] = data.user.email === 'jdoe@school.edu';\ntests[\"User username correct\"] = data.user.username === 'jdoe';\ntests[\"User user_type correct\"] = data.user.user_type === 'Administrator';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/users/{{user_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update User Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Updated user name correct\"] = data.user.name === 'John J Doe';\ntests[\"Updated user phone correct\"] = data.user.phone === '509.555.1213';\ntests[\"Updated user email correct\"] = data.user.email === 'jdoe1@school.edu';\ntests[\"Updated user username correct\"] = data.user.username === 'jdoe1';\ntests[\"Updated user user_type correct\"] = data.user.user_type === 'Staff';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\npostman.setGlobalVariable(\"user_username\", \"jdoe1\");\npostman.setGlobalVariable(\"user_password\", \"password1\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/users/{{user_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"name\": \"John J Doe\",\n    \"email\": \"jdoe1@school.edu\",\n    \"phone\": \"509.555.1213\",\n    \"username\": \"jdoe1\",\n    \"password\": \"password1\",\n    \"user_type\": \"Staff\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Authenticate Updated User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"User name correct\"] = data.user.name === 'John J Doe';\ntests[\"User phone correct\"] = data.user.phone === '509.555.1213';\ntests[\"User email correct\"] = data.user.email === 'jdoe1@school.edu';\ntests[\"User username correct\"] = data.user.username === 'jdoe1';\ntests[\"User user_type correct\"] = data.user.user_type === 'Staff';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/auth/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{user_username}}\",\n\"password\": \"{{user_password}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Updated User Record By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Updated user name correct\"] = data.user.name === 'John J Doe';\ntests[\"Updated user phone correct\"] = data.user.phone === '509.555.1213';\ntests[\"Updated user email correct\"] = data.user.email === 'jdoe1@school.edu';\ntests[\"Updated user username correct\"] = data.user.username === 'jdoe1';\ntests[\"Updated user user_type correct\"] = data.user.user_type === 'Staff';\ntests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/users/{{user_id}}",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete User By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response time is less than 1000ms\"] = responseTime < 1000;\ntests[\"Status code is 200\"] = responseCode.code === 200;\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
							}
						}
					],
					"request": {
						"url": "http://localhost:8079/api/v1/users/{{user_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}